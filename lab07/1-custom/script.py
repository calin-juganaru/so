# perf script event handlers, generated by perf script -g python
# Licensed under the terms of the GNU GPL License version 2

# The common_* event handler fields are the most useful fields common to
# all events.  They don't necessarily correspond to the 'common_*' fields
# in the format files.  Those fields not available as handler params can
# be retrieved using Python functions of the form common_*(context).
# See the perf-trace-python Documentation for the list of available functions.

import os
import sys

sys.path.append(os.environ['PERF_EXEC_PATH'] + \
        '/scripts/python/Perf-Trace-Util/lib/Perf/Trace')

from perf_trace_context import *
from Core import *

hash_search_index_events = 0
all_events = 0

def process_event(param_dict):
    global hash_search_index_events, all_events
    event_attr = param_dict["attr"]
    sample     = param_dict["sample"]
    raw_buf    = param_dict["raw_buf"]
    comm       = param_dict["comm"]
    name       = param_dict["ev_name"]

    '''
    TODO : Verify if the instruction pointer address belongs
     to hash_search_index function and increment hash_search_index_events
    HINT: use objdump to find the start address and the end address of
     the function
    '''

    all_events += 1

def trace_begin():
    pass
def trace_end():
    global all_events, hash_search_index_events
    print("ips in hash_search_index : %02f %%" %
            (float(hash_search_index_events) / float(all_events) * 100.0))

def trace_unhandled(event_name, context, event_fields_dict):
    print ' '.join(['%s=%s'%(k,str(v))for k,v in sorted(event_fields_dict.items())])

def print_header(event_name, cpu, secs, nsecs, pid, comm):
    print "%-20s %5u %05u.%09u %8u %-20s " % \
            (event_name, cpu, secs, nsecs, pid, comm),
